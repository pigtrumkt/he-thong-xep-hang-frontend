"use client";

import { useEffect, useRef, useState } from "react";

const mockServices = [
  "C·∫•p CCCD/CMND",
  "Khai sinh",
  "ƒêƒÉng k√Ω h√¥n nh√¢n",
  "Gi·∫•y ph√©p l√°i xe",
  "Gia h·∫°n h·ªô chi·∫øu",
  "S·ªï ƒë·ªè/S·ªï h·ªìng",
  "Ch·ª©ng th·ª±c vƒÉn b·∫£n",
  "T·∫°m tr√∫/T·∫°m v·∫Øng",
  "X√°c nh·∫≠n ƒë·ªôc th√¢n",
  "Chuy·ªÉn h·ªô kh·∫©u",
  "Th·∫ª BHYT",
  "Gi·∫•y t·ªù d√¢n s·ª±",
  "Gi·∫•y t·ªù d√¢n s·ª±",
  "Gi·∫•y t·ªù d√¢n s·ª±",
  "Gi·∫•y t·ªù d√¢n s·ª±",
];

export default function TakeNumberPage() {
  const [selectedService, setSelectedService] = useState("");
  const [queueNumber, setQueueNumber] = useState("1001");
  const [showConfirmModal, setShowConfirmModal] = useState(false);
  const [showSuccessModal, setShowSuccessModal] = useState(false);
  const [countdown, setCountdown] = useState(10);
  const countdownInterval = useRef<NodeJS.Timeout | null>(null);

  const startCountdown = () => {
    if (countdownInterval.current) clearInterval(countdownInterval.current);

    let time = 10;
    setCountdown(time);

    countdownInterval.current = setInterval(() => {
      time--;
      setCountdown(time);
      if (time <= 0 && countdownInterval.current) {
        clearInterval(countdownInterval.current);
        setShowSuccessModal(false);
      }
    }, 1000);
  };

  const handleServiceClick = (name: string) => {
    setSelectedService(name);
    setShowConfirmModal(true);
  };

  const handleConfirm = () => {
    setShowConfirmModal(false);
    setQueueNumber("1001"); // b·∫°n c√≥ th·ªÉ thay b·∫±ng call API l·∫•y s·ªë
    setShowSuccessModal(true);
    startCountdown();
  };

  return (
    <div className="flex flex-col items-center min-h-screen bg-gradient-to-br from-blue-50 to-sky-100">
      <div className="w-full max-w-[100rem] pt-8 px-8 mt-10 flex-1 flex flex-col">
        {/* Header */}
        <div className="flex items-center gap-6 mb-10 ml-7">
          <img
            src="/img/vn-circle.png"
            alt="Avatar"
            className="w-24 h-24 bg-white border-4 border-white rounded-full shadow-lg"
          />
          <div>
            <h1 className="mb-2 text-6xl font-extrabold tracking-wide text-blue-600 rounded-3xl drop-shadow-sm">
              L·∫§Y S·ªê TH·ª® T·ª∞
            </h1>
            <div className="text-gray-700 text-[1.9rem] font-semibold">
              Ch√†o b·∫°n, ch·ªçn d·ªãch v·ª• b·∫°n c·∫ßn nh√©!
            </div>
          </div>
        </div>

        {/* Danh s√°ch d·ªãch v·ª• */}
        <div className="custom-scroll overflow-y-auto max-h-[calc(100vh-15rem)] p-8 flex-1">
          <div className="grid grid-cols-1 gap-8 pr-4 md:grid-cols-2">
            {mockServices.map((service) => (
              <button
                key={service}
                onClick={() => handleServiceClick(service)}
                className="py-10 text-3xl font-bold text-blue-600 transition-all bg-white rounded-3xl drop-shadow-md active:scale-98 active:drop-shadow-sm active:bg-blue-50"
              >
                {service}
              </button>
            ))}
          </div>
        </div>
      </div>

      {/* Modal x√°c nh·∫≠n */}
      {showConfirmModal && (
        <div className="fixed inset-0 z-50 flex items-center justify-center modal-overlay active bg-black/50 backdrop-blur">
          <div className="modal-content bg-white rounded-3xl p-12 max-w-[90%] text-center shadow-xl">
            <h2 className="mb-8 text-4xl font-bold text-blue-900">
              X√ÅC NH·∫¨N D·ªäCH V·ª§
            </h2>
            <div className="p-6 mb-8 text-3xl font-bold text-blue-600 border border-blue-200 bg-blue-50 rounded-2xl">
              {selectedService}
            </div>
            <div className="flex justify-center gap-6">
              <button
                onClick={() => setShowConfirmModal(false)}
                className="px-10 py-4 text-2xl text-white bg-gray-500 hover:bg-gray-600 rounded-2xl"
              >
                H·ªßy b·ªè
              </button>
              <button
                onClick={handleConfirm}
                className="px-10 py-4 text-2xl text-white bg-blue-500 hover:bg-blue-600 rounded-2xl"
              >
                L·∫•y s·ªë
              </button>
            </div>
          </div>
        </div>
      )}

      {/* Modal th√†nh c√¥ng */}
      {showSuccessModal && (
        <div className="fixed inset-0 z-50 flex items-center justify-center modal-overlay active bg-black/50 backdrop-blur">
          <div className="modal-content bg-white rounded-3xl p-12 max-w-[90%] text-center shadow-xl">
            <h2 className="mb-8 text-4xl font-black text-blue-900">
              PHI·∫æU C·ª¶A B·∫†N
            </h2>
            <div className="p-8 mb-4 text-blue-600 border border-blue-200 bg-gradient-to-r from-blue-50 to-sky-50 rounded-2xl">
              <p className="text-[2rem] font-bold text-blue-800 uppercase">
                UBND x√£ T√¢n Quang
              </p>
              <p className="text-[1.5rem] text-blue-600 mt-1">
                ƒê·ªãa ch·ªâ: T·ªânh Tuy√™n Quang
              </p>
              <p className="text-[1.5rem] text-blue-600">
                ƒêi·ªán tho·∫°i: 0982984984
              </p>
              <div className="mt-4 mb-6 border-t border-blue-300 border-dashed"></div>
              <p className="text-[2.5rem] font-bold text-blue-600">
                {selectedService}
              </p>
              <div className="text-[8rem] font-black text-blue-600 mb-8">
                {queueNumber}
              </div>
              <p className="text-[1.5rem] text-blue-600">
                Tr∆∞·ªõc b·∫°n c√≤n <strong>5</strong> ng∆∞·ªùi, vui l√≤ng ch·ªù ƒë·∫øn l∆∞·ª£t.
              </p>
              <div className="mt-4 mb-2 border-t border-blue-300 border-dashed"></div>
              <div className="flex justify-end text-[1.2rem] text-blue-600">
                <span className="mr-1">Th·ªùi gian in:</span>
                <span>{new Date().toLocaleString("vi-VN")}</span>
              </div>
            </div>
            <div className="flex justify-center gap-2 mt-10 text-lg font-medium text-blue-500">
              <span className="text-[2.2rem]">üñ®Ô∏è</span>
              <span className="text-[1.8rem]">ƒêang in phi·∫øu</span>
              <span className="flex gap-1 mt-2">
                <span className="w-2 h-2 bg-blue-600 rounded-full dot animate-bounce"></span>
                <span className="w-2 h-2 delay-150 bg-blue-600 rounded-full dot animate-bounce"></span>
                <span className="w-2 h-2 delay-300 bg-blue-600 rounded-full dot animate-bounce"></span>
              </span>
            </div>
            <div className="flex justify-center w-full mt-4">
              <button
                onClick={() => setShowSuccessModal(false)}
                className="w-[12rem] px-8 py-4 bg-blue-500 hover:bg-blue-600 text-white text-[1.5rem] rounded-2xl mt-6"
              >
                ƒê√≥ng ({countdown})
              </button>
            </div>
          </div>
        </div>
      )}
    </div>
  );
}
